version: '3.8'

services:
  postgres:
    image: postgres
    container_name: postgres
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "${DB_PORT}:5432"
    networks:
      - ${APP_NETWORK_NAME}
    volumes:
      - postgres-user-data:/var/lib/postgresql/data
      - ./internal/adapter/driven/db/migration/init.sql:/docker-entrypoint-initdb.d/init.sql  # Mount init.sql into the container

  redis:
    image: redis
    container_name: redis
    ports:
      - "${REDIS_PORT}:6379"
    networks:
      - ${APP_NETWORK_NAME}
    restart: always
    environment:
      ALLOW_EMPTY_PASSWORD: yes

  app-service:
    image: ${APP_IMAGE}  # Specify the image name and tag
    container_name: ${CONTAINER_NAME}
    build:
      dockerfile: Dockerfile
      context: .
    environment:
      DB_HOST: postgres
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      REDIS_HOST: redis
      REDIS_PORT: ${REDIS_PORT}
      PORT: ${APP_PORT}
      IP: ${APP_IP}
    ports:
      - "${APP_PORT}:${APP_PORT}"
    depends_on:
      - postgres
      - redis
    restart: always
    networks:
      - ${APP_NETWORK_NAME}

networks:
  APP_NETWORK:
    driver: bridge
    external: false

volumes:
  postgres-user-data:
