// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: rate/v1/rate_service.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CheckRateLimitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Limit  int32  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *CheckRateLimitRequest) Reset() {
	*x = CheckRateLimitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rate_v1_rate_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckRateLimitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckRateLimitRequest) ProtoMessage() {}

func (x *CheckRateLimitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rate_v1_rate_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckRateLimitRequest.ProtoReflect.Descriptor instead.
func (*CheckRateLimitRequest) Descriptor() ([]byte, []int) {
	return file_rate_v1_rate_service_proto_rawDescGZIP(), []int{0}
}

func (x *CheckRateLimitRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CheckRateLimitRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type CheckRateLimitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Allowed bool   `protobuf:"varint,1,opt,name=allowed,proto3" json:"allowed,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *CheckRateLimitResponse) Reset() {
	*x = CheckRateLimitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rate_v1_rate_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckRateLimitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckRateLimitResponse) ProtoMessage() {}

func (x *CheckRateLimitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rate_v1_rate_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckRateLimitResponse.ProtoReflect.Descriptor instead.
func (*CheckRateLimitResponse) Descriptor() ([]byte, []int) {
	return file_rate_v1_rate_service_proto_rawDescGZIP(), []int{1}
}

func (x *CheckRateLimitResponse) GetAllowed() bool {
	if x != nil {
		return x.Allowed
	}
	return false
}

func (x *CheckRateLimitResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Request message for getting a user's rate limit
type GetUserRateLimitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // Unique ID of the user
}

func (x *GetUserRateLimitRequest) Reset() {
	*x = GetUserRateLimitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rate_v1_rate_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserRateLimitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserRateLimitRequest) ProtoMessage() {}

func (x *GetUserRateLimitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rate_v1_rate_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserRateLimitRequest.ProtoReflect.Descriptor instead.
func (*GetUserRateLimitRequest) Descriptor() ([]byte, []int) {
	return file_rate_v1_rate_service_proto_rawDescGZIP(), []int{2}
}

func (x *GetUserRateLimitRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// Response message for getting a user's rate limit
type GetUserRateLimitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // Unique ID of the user
	Limit     int32  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`                // Current rate limit (e.g., 100 requests per second)
	Remaining int32  `protobuf:"varint,3,opt,name=remaining,proto3" json:"remaining,omitempty"`        // Remaining requests allowed in the current time window
	Window    string `protobuf:"bytes,4,opt,name=window,proto3" json:"window,omitempty"`               // Time window for the rate limit (e.g., "10 seconds")
}

func (x *GetUserRateLimitResponse) Reset() {
	*x = GetUserRateLimitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rate_v1_rate_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserRateLimitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserRateLimitResponse) ProtoMessage() {}

func (x *GetUserRateLimitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rate_v1_rate_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserRateLimitResponse.ProtoReflect.Descriptor instead.
func (*GetUserRateLimitResponse) Descriptor() ([]byte, []int) {
	return file_rate_v1_rate_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetUserRateLimitResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetUserRateLimitResponse) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetUserRateLimitResponse) GetRemaining() int32 {
	if x != nil {
		return x.Remaining
	}
	return 0
}

func (x *GetUserRateLimitResponse) GetWindow() string {
	if x != nil {
		return x.Window
	}
	return ""
}

// Request message for updating a user's rate limit
type UpdateUserRateLimitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`        // Unique ID of the user
	NewLimit int32  `protobuf:"varint,2,opt,name=new_limit,json=newLimit,proto3" json:"new_limit,omitempty"` // New rate limit for the user (e.g., 1000 requests per second)
}

func (x *UpdateUserRateLimitRequest) Reset() {
	*x = UpdateUserRateLimitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rate_v1_rate_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserRateLimitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserRateLimitRequest) ProtoMessage() {}

func (x *UpdateUserRateLimitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rate_v1_rate_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserRateLimitRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserRateLimitRequest) Descriptor() ([]byte, []int) {
	return file_rate_v1_rate_service_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateUserRateLimitRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateUserRateLimitRequest) GetNewLimit() int32 {
	if x != nil {
		return x.NewLimit
	}
	return 0
}

// Response message for updating a user's rate limit
type UpdateUserRateLimitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId       string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                    // Unique ID of the user
	UpdatedLimit int32  `protobuf:"varint,2,opt,name=updated_limit,json=updatedLimit,proto3" json:"updated_limit,omitempty"` // Updated rate limit for the user
	Message      string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`                                // Confirmation message (e.g., "Rate limit updated successfully")
}

func (x *UpdateUserRateLimitResponse) Reset() {
	*x = UpdateUserRateLimitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rate_v1_rate_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserRateLimitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserRateLimitResponse) ProtoMessage() {}

func (x *UpdateUserRateLimitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rate_v1_rate_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserRateLimitResponse.ProtoReflect.Descriptor instead.
func (*UpdateUserRateLimitResponse) Descriptor() ([]byte, []int) {
	return file_rate_v1_rate_service_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateUserRateLimitResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateUserRateLimitResponse) GetUpdatedLimit() int32 {
	if x != nil {
		return x.UpdatedLimit
	}
	return 0
}

func (x *UpdateUserRateLimitResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_rate_v1_rate_service_proto protoreflect.FileDescriptor

var file_rate_v1_rate_service_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x72, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x72, 0x61,
	0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72, 0x22, 0x46, 0x0a, 0x15, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x22, 0x4c, 0x0a, 0x16, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x61, 0x6c,
	0x6c, 0x6f, 0x77, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0x32, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x7f, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x61,
	0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06,
	0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x77, 0x69,
	0x6e, 0x64, 0x6f, 0x77, 0x22, 0x52, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6e,
	0x65, 0x77, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x6e, 0x65, 0x77, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x75, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x23, 0x0a, 0x0d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32,
	0xba, 0x02, 0x0a, 0x12, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x59, 0x0a, 0x0e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52,
	0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x22, 0x2e, 0x72, 0x61, 0x74, 0x65, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x61, 0x74, 0x65,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x72,
	0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x5f, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x61, 0x74, 0x65,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x24, 0x2e, 0x72, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x61, 0x74, 0x65, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x72, 0x61,
	0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x68, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x27, 0x2e, 0x72, 0x61, 0x74, 0x65,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x28, 0x2e, 0x72, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x61, 0x74, 0x65, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x81, 0x01, 0x0a,
	0x0f, 0x63, 0x6f, 0x6d, 0x2e, 0x72, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72,
	0x42, 0x10, 0x52, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x50, 0x01, 0x5a, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2f, 0x72,
	0x61, 0x74, 0x65, 0x2f, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x52, 0x58, 0x58, 0xaa, 0x02, 0x0b, 0x52,
	0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72, 0xca, 0x02, 0x0b, 0x52, 0x61, 0x74,
	0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72, 0xe2, 0x02, 0x17, 0x52, 0x61, 0x74, 0x65, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x65, 0x72, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0xea, 0x02, 0x0b, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rate_v1_rate_service_proto_rawDescOnce sync.Once
	file_rate_v1_rate_service_proto_rawDescData = file_rate_v1_rate_service_proto_rawDesc
)

func file_rate_v1_rate_service_proto_rawDescGZIP() []byte {
	file_rate_v1_rate_service_proto_rawDescOnce.Do(func() {
		file_rate_v1_rate_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_rate_v1_rate_service_proto_rawDescData)
	})
	return file_rate_v1_rate_service_proto_rawDescData
}

var file_rate_v1_rate_service_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_rate_v1_rate_service_proto_goTypes = []any{
	(*CheckRateLimitRequest)(nil),       // 0: rateLimiter.CheckRateLimitRequest
	(*CheckRateLimitResponse)(nil),      // 1: rateLimiter.CheckRateLimitResponse
	(*GetUserRateLimitRequest)(nil),     // 2: rateLimiter.GetUserRateLimitRequest
	(*GetUserRateLimitResponse)(nil),    // 3: rateLimiter.GetUserRateLimitResponse
	(*UpdateUserRateLimitRequest)(nil),  // 4: rateLimiter.UpdateUserRateLimitRequest
	(*UpdateUserRateLimitResponse)(nil), // 5: rateLimiter.UpdateUserRateLimitResponse
}
var file_rate_v1_rate_service_proto_depIdxs = []int32{
	0, // 0: rateLimiter.RateLimiterService.CheckRateLimit:input_type -> rateLimiter.CheckRateLimitRequest
	2, // 1: rateLimiter.RateLimiterService.GetUserRateLimit:input_type -> rateLimiter.GetUserRateLimitRequest
	4, // 2: rateLimiter.RateLimiterService.UpdateUserRateLimit:input_type -> rateLimiter.UpdateUserRateLimitRequest
	1, // 3: rateLimiter.RateLimiterService.CheckRateLimit:output_type -> rateLimiter.CheckRateLimitResponse
	3, // 4: rateLimiter.RateLimiterService.GetUserRateLimit:output_type -> rateLimiter.GetUserRateLimitResponse
	5, // 5: rateLimiter.RateLimiterService.UpdateUserRateLimit:output_type -> rateLimiter.UpdateUserRateLimitResponse
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_rate_v1_rate_service_proto_init() }
func file_rate_v1_rate_service_proto_init() {
	if File_rate_v1_rate_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_rate_v1_rate_service_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*CheckRateLimitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rate_v1_rate_service_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*CheckRateLimitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rate_v1_rate_service_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*GetUserRateLimitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rate_v1_rate_service_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*GetUserRateLimitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rate_v1_rate_service_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateUserRateLimitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rate_v1_rate_service_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateUserRateLimitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rate_v1_rate_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_rate_v1_rate_service_proto_goTypes,
		DependencyIndexes: file_rate_v1_rate_service_proto_depIdxs,
		MessageInfos:      file_rate_v1_rate_service_proto_msgTypes,
	}.Build()
	File_rate_v1_rate_service_proto = out.File
	file_rate_v1_rate_service_proto_rawDesc = nil
	file_rate_v1_rate_service_proto_goTypes = nil
	file_rate_v1_rate_service_proto_depIdxs = nil
}
