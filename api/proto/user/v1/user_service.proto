syntax = "proto3";

package user.v1;
import "user/v1/user_type.proto";

// UserService service definition
service UserService {
    rpc CreateUser(CreateUserRequest) returns (CreateUserResponse);
    rpc GetUserById(GetUserByIdRequest) returns (GetUserByIdResponse);
    rpc GetAllUsers(GetAllUsersRequest) returns (GetAllUsersResponse);
    rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse);
    rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse);
    rpc GetUserByUsernameAndPassword(GetUserByUsernameAndPasswordRequest) returns (GetUserByUsernameAndPasswordResponse);
    rpc GetUsersWithPagination(GetUsersWithPaginationRequest) returns (GetUsersWithPaginationResponse);
  }


// CreateUser request and response
message CreateUserRequest {
  string username = 1;
  string password = 2;
  string role_id = 3;
}

message CreateUserResponse {
  string id = 1;
}

// GetUserById request and response
message GetUserByIdRequest {
  string id = 1;
}

message GetUserByIdResponse {
  User user = 1;
}

// GetAllUsers request and response
message GetAllUsersRequest {}

message GetAllUsersResponse {
  repeated User users = 1;
}

// UpdateUser request and response
message UpdateUserRequest {
  string id = 1;
  string password = 2;
  string role_id = 3;
}

message UpdateUserResponse {
}

// DeleteUser request and response
message DeleteUserRequest {
  string id = 1;
}

message DeleteUserResponse {
}

// GetUserByUsernameAndPassword request and response
message GetUserByUsernameAndPasswordRequest {
  string username = 1;
  string password = 2;
}

message GetUserByUsernameAndPasswordResponse {
  User user = 1;
}

// GetUsersWithPagination request and response
message GetUsersWithPaginationRequest {
  int32 offset = 1;
  int32 limit = 2;
}

message GetUsersWithPaginationResponse {
  repeated User users = 1;
  int64 total_count = 2;
}

